{
	"Function": [
		"arg_max(arg,val)",
		"arg_min(arg,val)",
		"avg(arg)",
		"bit_and(arg)",
		"bit_or(arg)",
		"bit_xor(arg)",
		"bool_and(arg)",
		"bool_or(arg)",
		"count(arg)",
		"first(arg)",
		"histogram(arg)",
		"last(arg)",
		"list(arg)",
		"max(arg)",
		"min(arg)",
		"product(arg)",
		"string_agg(arg, sep)",
		"sum(arg)"
	],
	"Description": [
		"Calculates the arg value for a maximum val value.",
		"Calculates the arg value for a minimum val value.",
		"Calculates the average value for all tuples in arg.",
		"Returns the bitwise AND of all bits in a given expression .",
		"Returns the bitwise OR of all bits in a given expression.",
		"Returns the bitwise XOR of all bits in a given expression.",
		"Returns TRUE if every input value is TRUE, otherwise FALSE.",
		"Returns TRUE if any input value is TRUE, otherwise FALSE.",
		"Calculates the number of tuples tuples in arg.",
		"Returns the first value of a column.",
		"Returns a LIST of STRUCTs with the fields bucket and count.",
		"Returns the last value of a column.",
		"Returns a LIST containing all the values of a column.",
		"Returns the maximum value present in arg.",
		"Returns the minumum value present in arg.",
		"Calculates the product of all tuples in arg",
		"Concatenates the column string values with a separator",
		"Calculates the sum value for all tuples in arg."
	],
	"Example": [
		"arg_max(A,B)",
		"arg_min(A,B)",
		"avg(A)",
		"bit_and(A)",
		"bit_or(A)",
		"bit_xor(A)",
		"bool_and(A)",
		"bool(A)",
		"count(A)",
		"first(A)",
		"histogram(A)",
		"last(A)",
		"list(A)",
		"max(A)",
		"min(A)",
		"product(A)",
		"string_agg(S, ',')",
		"sum(A)"
	],
	"Alias(es)": [
		"argMax(A,B), max_by(A,b)",
		"argMin(A,B), min_by(A,B)",
		"-",
		"-",
		"-",
		"-",
		"-",
		"-",
		"-",
		"arbitrary(A)",
		"-",
		"-",
		"array_agg",
		"-",
		"-",
		"-",
		"group_concat",
		"-"
	]
}
